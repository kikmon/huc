name: build

on: 
  push:
  # activating dispatch while troubleshooting
  workflow_dispatch:
  
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_ubuntu_20_04:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code from the repository
        uses: actions/checkout@v3
      - name: Build
        run: |
          make
          echo Build Complete
      - name: Archive toolchain
        uses: actions/upload-artifact@v3
        with:
          name: toolchain
          path: |
            bin
            include

  build_windows_2022:
    runs-on: windows-2022
    steps:
      - name: Check out code from the repository
        uses: actions/checkout@v3
      - name: Build
        run: |
          C:\msys64\msys2_shell.cmd -no-start -defterm -c "pacman -S base-devel gcc git --noconfirm"
          C:\msys64\msys2_shell.cmd -no-start -defterm -where %CD% -c "make"
          echo Build Complete
      - name: Archive toolchain
        uses: actions/upload-artifact@v3
        with:
          name: toolchain
          path: |
            bin
            include
            
  build_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from the repository
        uses: actions/checkout@v3
      - name: Build Setup
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push to github registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
containerd:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      -
        name: Set up containerd
        uses: crazy-max/ghaction-setup-containerd@v1
      -
        name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: docker.io/kikmon/huc:latest
          outputs: type=oci,dest=/tmp/image.tar
      -
        name: Import image in containerd
        run: |
          sudo ctr i import --base-name docker.io/kikmon/huc --digests --all-platforms /tmp/image.tar
      -
        name: Push image with containerd
        run: |
          sudo ctr --debug i push --user "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" docker.io//kikmon/huc:lates
          
  security:
    runs-on: ubuntu-latest
    steps:
    - name: Run Snyk to check Docker image for vulnerabilities
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: https://ghcr.io/huc/huc:latest

            
            
